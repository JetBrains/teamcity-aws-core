/*
 * Copyright 2000-2022 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'distribution'
}

configurations {
    ftpDeployer
    mavenArtifacts
}

dependencies {
    api "com.amazonaws:aws-java-sdk-codedeploy:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-core:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-codepipeline:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-s3:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-cloudfront:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-sts:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-codebuild:${awsSDKVersion}"
    api "com.amazonaws:aws-java-sdk-lambda:${awsSDKVersion}"

    compileOnly "org.jetbrains.teamcity:server-api:${teamcityVersion}"
    compileOnly "org.jetbrains.teamcity.internal:web:${teamcityVersion}"
    compileOnly "org.jetbrains.teamcity:oauth:${teamcityVersion}"

    testImplementation "org.jetbrains.teamcity:tests-support:${teamcityVersion}"

    ftpDeployer "org.apache.maven.wagon:wagon-ftp:2.3"
}

ext {
    mavenRepository = findProperty('maven.repository')
    mavenRepositoryUser = findProperty('maven.repository.user')
    mavenRepositoryPassword = findProperty('maven.repository.password')
    pomFile = "$mavenPomDir/amazon-util-pom.xml"
}

version = "$libVersion"
group = 'jetbrains.buildServer.util'

task writePom {
    doLast {
        pom {
            project {
                groupId 'jetbrains.buildServer.util'
                artifactId 'amazon-util'
                version "$libVersion"
            }
        }
                .whenConfigured { pom -> pom.dependencies.removeAll { it.scope.contains('test') } }
                .writeTo("$pomFile")
    }
}

task prepareArtifacts {
    dependsOn tasks.writePom

    doLast {
        artifacts.mavenArtifacts file: file("${libsDir}/aws-core-common-${libVersion}.jar"), name: 'amazon-util', type: 'jar'
    }
}

task readPom {
    doLast {
        def root = new XmlParser().parse(file("$pomFile"))

        def sw = new StringWriter()
        def printer = new XmlNodePrinter(new PrintWriter(sw))
        printer.preserveWhitespace = true
        printer.print(root)

        readPom.ext.result = sw.toString()
    }
}

test {
    useTestNG()
    options {
        systemProperties(System.getProperties())
    }
}

distributions {
    main {
        baseName = project.name
        contents {
            into('') {
                from "install_pom.xml"
                filter(ReplaceTokens, tokens: [teamcityVersion: libVersion])
                filteringCharset = 'UTF-8'
            }
            into('amazon-util') {
                from("$libsDir/aws-core-common-${libVersion}.jar") {
                    rename "aws-core-common-${libVersion}.jar", "amazon-util-${libVersion}.jar"
                }
                dirMode = 0755
                fileMode = 0644
            }
            into('amazon-util') {
                from("$pomFile") {
                    rename "amazon-util-pom.xml", "pom.xml"
                }
            }
        }
    }
}

task assembleZipArtifact {
    dependsOn tasks.prepareArtifacts
    dependsOn tasks.writePom
}

distZip {
    dependsOn tasks.assembleZipArtifact
    archiveName = "amazon-util.zip"
}

publishing {
    repositories {
        maven {
            name = "jetbrainsMaven"
            credentials {
                username = mavenRepositoryUser
                password = mavenRepositoryPassword
            }
            url = mavenRepository
        }

        maven {
            name = "spacePackages"
            credentials {
                username = spaceUsername
                password = spacePassword
            }
            url = 'https://packages.jetbrains.team/maven/p/tc/maven'
        }
    }

    task prepareUploadMavenArtifactsTask {
        dependsOn tasks.prepareArtifacts
        dependsOn tasks.readPom

        doFirst {
            tasks.uploadMavenArtifacts.repositories.mavenDeployer {
                configuration = configurations.ftpDeployer

                repository(url: "$mavenRepository") {
                    authentication(userName: "${mavenRepositoryUser}", password: "${mavenRepositoryPassword}")
                }

                addFilter('amazon-util') {artifact, file ->
                    artifact.name == 'amazon-util'
                }.withXml { provider ->
                    def builder = provider.asString()
                    builder.length = 0
                    builder << tasks.readPom.result
                }
            }
        }
    }

    publications {
        mavenPrivate(MavenPublication) {
            groupId = 'org.jetbrains.teamcity'
            artifactId = 'aws-core-common'
            version = getPackageVersion()
            from components.java
            pom {
                name = 'AWS Core Library'
                description = 'Shared AWS Core Library'
                url = 'https://packages.jetbrains.team/maven/p/tc/maven'
            }
        }
        mavenPrivateUtils(MavenPublication) {
            groupId = 'jetbrains.buildServer.util'
            artifactId = 'amazon-util'
            version = getPackageVersion()
            from components.java
            pom {
                name = 'AWS Core Library'
                description = 'Shared AWS Core Library'
                url = 'https://packages.jetbrains.team/maven/p/tc/maven'
            }
        }
        mavenPublic(MavenPublication) {
            groupId = 'jetbrains.buildServer.util'
            artifactId = 'amazon-util'
            version = "${libVersion}"
            from components.java
            pom {
                name = 'AWS Core Library'
                description = 'Shared AWS Core Library'
                url = mavenRepository
            }
        }
    }
}

def getPackageVersion() {
    if (gitBranch() == "master")
        getVersionName()
    else
        getVersionName() + "-SNAPSHOT"
}

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine{line->branch = line}
    proc.err.eachLine{line->println line}
    proc.waitFor()
    branch
}

def getVersionName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
