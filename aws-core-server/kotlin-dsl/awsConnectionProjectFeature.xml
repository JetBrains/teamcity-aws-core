<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="projectFeature" type="OAuthProvider" generateDslJar="true" applicable="params['providerType'] == 'AWS'">
  <class name="AwsConnection">
    <description>
      Stores information and configuration for the access to Amazon Web Services.
    </description>
  </class>

  <init>
    <param name="providerType" value="AWS" />
  </init>

  <function name="awsConnection">
    <description>
      @see AwsConnection
    </description>
  </function>

  <params>
    <param name="displayName" dslName="name">
      <description>
        AWS connection display name
      </description>
    </param>
    <param name="awsRegionName" dslName="regionName" type="string">
      <description>
        Region where this connection will be used.
      </description>
    </param>
    <param name="projectFeatureId" dslName="projectFeatureId" type="string">
      <description>
        Custom identifier for this AWS Connection
      </description>
    </param>
    <param name="awsCredentialsType" dslName="credentialsType" type="compound">
      <description>
        The way how to obtain credentials (just provide the keys, assume IAM role or other)
      </description>
      <option name="static" value="awsAccessKeys">
        <param name="awsAccessKeyId" dslName="accessKeyId" type="string" mandatory="true">
          <description>
            Access Key ID
          </description>
        </param>
        <param name="secure:awsSecretAccessKey" dslName="secretAccessKey" type="string" mandatory="true">
          <description>
            Secret Access Key
          </description>
        </param>
        <param name="awsSessionCredentials" dslName="useSessionCredentials" type="boolean" trueValue="true" falseValue="false">
          <description>
            Whether to use temporary credentials provided by STS service
          </description>
        </param>
        <param name="awsStsEndpoint" dslName="stsEndpoint" type="string">
          <description>
            Endpoint from where to obtain session credentials
          </description>
        </param>
      </option>
      <option name="iamRole" value="awsAssumeIamRole">
        <param name="awsIamRoleArn" dslName="roleArn" type="string" mandatory="true">
          <description>
            AWS IAM Role ARN
          </description>
        </param>
        <param name="awsIamRoleSessionName" dslName="sessionName" type="string" mandatory="true">
          <description>
            An identifier for the assumed role session. Use the role session name to uniquely identify a session when the same role is assumed by different principals or for different reasons.
          </description>
        </param>
        <param name="awsConnectionId" dslName="awsConnectionId" type="string" mandatory="true">
          <description>
            Principal AWS Connection ID (Who will assume the IAM Role)
          </description>
        </param>
        <param name="principalAwsConnectionProjectId" dslName="principalAwsConnectionProjectId" type="string" mandatory="true">
          <description>
            The project ID of the Principal AWS Connection
          </description>
        </param>
        <param name="awsStsEndpoint" dslName="stsEndpoint" type="string">
          <description>
            Endpoint from where to obtain session credentials of the assumed IAM Role
          </description>
        </param>
      </option>
    </param>
  </params>
</dsl-extension>