/*
 * Copyright 2000-2022 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'idea'
  id 'groovy'
  id 'com.github.jk1.dependency-license-report' version '1.17'
}

ext {
  teamcityVersion = project.hasProperty('teamcityVersion') ? property('teamcityVersion') : '2023.05'
  teamcityDir = findProperty('teamcityDir') ?: "$rootDir/teamcity/TeamCity"
  teamcityDev = "$teamcityDir/devPackage/"
  teamcityRuntime = "$teamcityDir/webapps/ROOT/WEB-INF/lib/"
  teamcityDataDir = "$rootDir/teamcity/data/" + teamcityVersion
  teamcityJavaHome = System.properties['java.home']

  awsSDKVersion = findProperty('aws.sdk.version') ?: '1.12.589'

  libVersion = project.hasProperty('awsCoreVersion') ? property('awsCoreVersion') : teamcityVersion
  providedPluginVersion = findProperty('versionNumber')

  spaceUsername = findProperty('space.repository.user') ?: findProperty('spaceUsername')
  spacePassword = findProperty('space.repository.password') ?: findProperty('spacePassword')

  buildUtils = new BuildUtils(ext)
}

allprojects {

  configurations {
    teamcityRuntimeServer
  }

  project.repositories.clear()

  repositories {
    mavenLocal()
    maven { url "https://download.jetbrains.com/teamcity-repository" }
    maven {
      url "https://packages.jetbrains.team/maven/p/tc/maven"
      credentials {
        username spaceUsername
        password spacePassword
      }
    }
    mavenCentral()
  }

}

idea {
  project {
    vcs = 'Git'
  }
}

configure(subprojects) {
  apply plugin: 'java'

  sourceCompatibility = "1.8"
  targetCompatibility = "1.8"

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
  }

  test {
    useTestNG()
    testLogging.showStandardStreams = true
  }

  dependencies {
    compileOnly "org.codehaus.groovy:groovy-all:2.2.1"

    teamcityRuntimeServer fileTree(dir: teamcityRuntime).include('*.jar').exclude('marketplace-zip-signer*.jar')

    compileOnly fileTree(dir: teamcityRuntime, includes: ['annotations.jar', 'openapi.jar'])

    testImplementation fileTree(dir: "$teamcityDev/tests/", includes: ['*.jar'])
    testImplementation fileTree(dir: teamcityRuntime).include('*.jar').exclude('marketplace-zip-signer*.jar')
    testImplementation "org.hamcrest:hamcrest-core:1.3"

    configurations.compileOnly.extendsFrom(configurations.teamcityRuntimeServer)
  }

  configurations.implementation {
    exclude group : "org.apache.httpcomponents"
  }
}

task uploadMavenArtifacts {
  tasks.uploadMavenArtifacts.dependsOn ':aws-core-common:prepareUploadMavenArtifactsTask'
}

import com.github.jk1.license.render.*

licenseReport {
  renderers = [new JsonReportRenderer('third-party-libraries.json')]
}

build.finalizedBy generateLicenseReport
